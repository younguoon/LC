# =========================================================================
# CHECK IN SEOUL 관리자 시스템 설정
# =========================================================================

# Spring Boot 기본 설정
spring:
  profiles:
    active: dev
  
  # 애플리케이션 정보
  application:
    name: CHECK IN SEOUL Admin System
  
  # JSP 및 MVC 설정 (기존 설정 유지)
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
    static-path-pattern: /css/**,/js/**,/images/**
  
  # 개발 도구 설정 (기존 설정 유지)
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
  
  # 웹 리소스 설정 (기존 설정 유지)
  web:
    resources:
      static-locations: classpath:/static/,classpath:/public/,file:src/main/webapp/
      cache:
        period: 0 # 개발시 캐시 비활성화
  
  # 출력 설정 (컬러 로그)
  output:
    ansi:
      enabled: ALWAYS

  # 세션 설정
  session:
    store-type: memory
    timeout: 1800 # 30분

  # 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB
      enabled: true

# 서버 설정 (기존 설정 확장)
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    session:
      timeout: 30m
      cookie:
        http-only: true
        secure: false # HTTPS 사용시 true로 변경
        same-site: lax
    # JSP 설정 (기존 설정 유지)
    jsp:
      init-parameters:
        development: true  # JSP 재컴파일 허용
        checkInterval: 0 # JSP 변경 즉시 반영
  
  # 톰캣 설정 (기존 설정 유지 및 확장)
  tomcat:
    uri-encoding: UTF-8
    max-connections: 8192
    accept-count: 100
    threads:
      max: 200
      min-spare: 10
  
  # 에러 페이지 설정
  error:
    whitelabel:
      enabled: false
    path: /error
    include-stacktrace: always # 개발 환경
    include-message: always

  # 압축 설정
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

# 로깅 설정
logging:
  level:
    root: INFO
    com.lottecard: DEBUG
    org.springframework: INFO
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    org.springframework.web.servlet: DEBUG
    org.springframework.web.servlet.mvc: DEBUG
    org.springframework.web.servlet.view: DEBUG
    org.apache.catalina: INFO
    org.apache.coyote: INFO
    org.apache.jasper: DEBUG # JSP 컴파일 관련 로그
  
  # 로그 패턴 (콘솔용 - 컬러 지원)
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%t] %-40.40logger{39} : %m%n%wEx"
  
  # 로그 파일 설정
  file:
    name: logs/application.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
      total-size-cap: 1GB

# 관리 엔드포인트 설정 (Actuator - 선택사항)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

# 커스텀 애플리케이션 설정
app:
  name: CHECK IN SEOUL
  version: 1.0.0
  description: CHECK IN SEOUL 관리자 시스템
  admin:
    default-username: admin
    default-password: admin123
  security:
    session-timeout: 1800 # 30분 (초)
    remember-me-timeout: 2592000 # 30일 (초)

---
# =========================================================================
# 운영 환경 설정 (prod profile)
# =========================================================================
spring:
  config:
    activate:
      on-profile: prod

  # 개발 도구 비활성화
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false

  # 웹 리소스 캐시 활성화
  web:
    resources:
      cache:
        period: 86400 # 1일 캐시

# 운영 환경 로깅 (보안 강화)
logging:
  level:
    root: WARN
    com.lottecard: INFO
    org.springframework: WARN
  file:
    name: /var/log/checkinseoul/application.log

# 운영 환경 서버 설정
server:
  # 보안 강화
  servlet:
    session:
      cookie:
        secure: true # HTTPS 환경에서는 true
        http-only: true
        same-site: strict
    jsp:
      init-parameters:
        development: false # 운영에서는 false
  
  # 에러 정보 숨김
  error:
    include-stacktrace: never
    include-message: never

  # 톰캣 운영 최적화
  tomcat:
    max-connections: 10000
    accept-count: 100
    threads:
      max: 300
      min-spare: 20

  # HTTP/2 활성화
  http2:
    enabled: true

# 운영 환경 관리 엔드포인트 (보안 강화)
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: never